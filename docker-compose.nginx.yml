version: "3.9"

services:
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - frontend
      - backend
    networks:
      - app-network
    restart: unless-stopped

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: MatiasUCD
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    restart: unless-stopped

  backend:
    build:
      context: .
      dockerfile: ./apps/backend/Dockerfile.simple
    environment:
      - NODE_ENV=production
    env_file:
      - ./apps/backend/.env.production
    networks:
      - app-network
    depends_on:
      - db
      - redis
    restart: unless-stopped

  frontend:
    build:
      context: .
      dockerfile: ./apps/frontend/Dockerfile.simple
    environment:
      - NODE_ENV=production
    env_file:
      - ./apps/frontend/.env.production
    networks:
      - app-network
    depends_on:
      - backend
    restart: unless-stopped

  ml-api:
    build:
      context: .
      dockerfile: ./data/Dockerfile.production
    environment:
      - FLASK_ENV=production
    networks:
      - app-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    ports:
      - "6379:6379"
    networks:
      - app-network
    restart: unless-stopped
    volumes:
      - redis_data:/data

networks:
  app-network:

volumes:
  postgres_data:
  redis_data: